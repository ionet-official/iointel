[project]
name = "iointel"
dynamic = ["version", "readme"]
description = "A framework to create agents, tasks, and workflows."
requires-python = ">= 3.10"
dependencies = [
    "pydantic>=2.10.3",
    "docker>=7.1.0",
    "sqlalchemy>=2.0.36",
    "python-dotenv>=1.0.1",
    "httpx",
    "pytest>=8.3.4",
    "pytest-mock>=3.12.0",
    "python-multipart>=0.0.20",
    "sqlalchemy-utils>=0.41.2",
    "pgvector>=0.3.6",
    "pydantic-ai>=0.2.4",
]
keywords = ["Agents", "LLM", "framework", "AI", "tools"]
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
]

testpaths = ["tests"]

[tool.pytest.ini_options]
timeout = 120
asyncio_mode = "auto"
norecursedirs = [
    "*.egg-info",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "node_modules",
]

[project.optional-dependencies]
tests = [
    "pytest-asyncio>=0.18.2,!=0.22.0,<0.23.0",
    "pytest-rerunfailures>=10,<14",
    "pytest-sugar>=0.9,<2.0",
    "pytest>=7.0",
    "pytest-timeout",
    "pytest-xdist",
    "pytest-dotenv",
]


tools = [
    "solders>=0.23.0",
    "solana>=0.36.2",
    "r2r>=3.3.32",
    "firecrawl-py>=1.11.0",
    "wolframalpha>=5.1.3",
    "apify-client>=1.9.2",
    "arxiv>=2.1.3",
    "pypdf>=5.3.0",
    "boto3>=1.37.2",
    "pycountry>=24.6.1",
    "baidusearch>=1.0.3",
    "pytz>=2024.2",
    "requests>=2.32.3",
    "atlassian-python-api>=3.41.19",
    "crawl4ai>=0.4.248",
    "duckdb>=1.2.0",
    "duckduckgo-search>=7.5.0",
    "exa-py>=1.8.9",
    "pygithub>=2.6.1",
    "google-api-python-client>=2.162.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.1",
    "googlemaps>=4.10.0",
    "jira>=3.8.0",
    "mlx-whisper>=0.4.2",
    "moviepy>=2.1.2",
    "newspaper3k>=0.2.8",
    "lxml-html-clean>=0.4.1",
    "newspaper4k>=0.9.3.1",
    "openbb>=4.1.3",
    "pandas>=2.2.3",
    "psycopg2-binary>=2.9.10",
    "praw>=7.8.1",
    "resend>=2.6.0",
    "scrapegraph-py>=1.12.0",
    "google-search-results>=2.4.2",
    "slack-sdk>=3.34.0",
    "spider-client>=0.1.26",
    "tavily-python>=0.5.1",
    "py-trello>=0.20.1",
    "twilio>=9.4.6",
    "webexpythonsdk>=2.0.4",
    "tweepy>=4.15.0",
    "yfinance>=0.2.54",
    "youtube-transcript-api>=0.6.3",
    "e2b_code_interpreter>=1.5.0",
    "browserbase>=1.4.0",
    "playwright>=1.52.0",
    "todoist-api-python>=3.1.0",
    # "agentql", BROKEN dep
]



[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["iointel"]

[tool.hatch.version]
path = "iointel/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
fragments = [
    {path = 'README.md'},
]
substitutions = [
    # convert GitHub issue/PR numbers and handles to links
    {pattern = '(\s+)#(\d+)', replacement = '\1[#\2](https://github.com/ionet-official/iointel/issues/\2)'},
    {pattern = '(\s+)@([\w\-]+)', replacement = '\1[@\2](https://github.com/\2)'},
    {pattern = '@@', replacement = '@'},
    # highlight sections which don't have anchors
    # see https://github.com/pypa/readme_renderer/issues/169#issuecomment-808577486
    {pattern = '(\n##+\s+[^<]*?)\n', replacement = '\1 (MISSING ANCHOR)\n'},
    # strip whitespace between section name and anchor
    {pattern = '(\n##+\s+.*?)\s*(<a .*\n)', replacement='\1\2'},
    # replace Github-styled callout (not supported on pypi) with just bold
    {pattern = '\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\]', replacement = '**\1**:'},
]
